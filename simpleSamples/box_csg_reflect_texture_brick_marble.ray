SBT-raytracer 1.0

// box_cyl_reflect.ray
// Test the reflection term
// Don't forget to increase the trace depth to >= 2!



camera
{
	position = (15, 0, 5);
	viewdir = (-1, 0, -0.3);
	updir = (0, 0, 1);
}

ambient_light
{
	color = (0.5, 0.5, 0.5);
}

// Directional light which shouldn't
// cast any shadows
directional_light
{
	direction = (-1, 0, -0.2);
	color = (1, 1, 1);
}

// The box forms a plane, which should reflect the cylinder
scale( 15, 15, 1, 
	square {
		material = { 
			diffuse = "brick_diff.bmp"; 
			specular = "brick_spec.bmp";
			normal = "brick_norm.bmp";
			reflective = (1, 1, 1);
			shininess = 0.2;
		}
	} )

// We'll give this a little ambient intensity to ensure
// that the bottom, which doesn't face the light, is still 
// reflected properly (this is a common hack, since with 
// raytracing you don't have diffuse-diffuse reflections)
translate( 6, 0, 1,
	scale(2, 2, 2, 
		intersection (
			translate(0, 0, 0.5, 
				sphere {
					material = {
					ambient = (0.2, 0.2, 0.2);
					diffuse = marble {
						color = (0.6, 0.0, 1.0);
						lightness = 0.5;
						contrast = 0.8;
						frequency = 20;
						scale = (1, 1, 0.5);
						depth = 4;
					};
					specular = (0.5, 0.5, 0.5);
					reflective = (1, 1, 1);
					shininess = 0.2;
				}}
			),
			translate(0, 0, -0.5, 
				sphere {
					material = {
					ambient = (0.2, 0.2, 0.2);
					diffuse = (1.0, 0.6, 0.8);
					specular = (0.5, 0.5, 0.5);
					reflective = (1, 1, 1);
					shininess = 0.2;
				}}
			)
		) ))
